import tkinter as tk
from tkinter import messagebox

class Calculator:
    def __init__(self, root):
        self.root = root
        self.root.title("Calculator")
        self.root.geometry("400x500")
        self.root.resizable(False, False)

        self.expression = ""
        self.text_input = tk.StringVar()

        self.create_widgets()

    def create_widgets(self):
        # Display frame
        display_frame = tk.Frame(self.root, height=100, bd=10, relief='raised')
        display_frame.pack(side=tk.TOP)
        
        display_entry = tk.Entry(display_frame, font=('arial', 20, 'bold'), textvariable=self.text_input, bd=30, insertwidth=4, bg='powder blue', justify='right')
        display_entry.grid(row=0, column=0)
        display_entry.pack()

        # Buttons frame
        buttons_frame = tk.Frame(self.root)
        buttons_frame.pack()

        # Buttons layout
        buttons = [
            '7', '8', '9', '/',
            '4', '5', '6', '*',
            '1', '2', '3', '-',
            '0', 'C', '=', '+'
        ]

        row = 0
        col = 0

        for button in buttons:
            if button == '=':
                tk.Button(buttons_frame, text=button, padx=20, pady=20, bd=8, font=('arial', 20, 'bold'), bg='green', command=self.equal_button).grid(row=row, column=col)
            elif button == 'C':
                tk.Button(buttons_frame, text=button, padx=20, pady=20, bd=8, font=('arial', 20, 'bold'), bg='red', command=self.clear_button).grid(row=row, column=col)
            else:
                tk.Button(buttons_frame, text=button, padx=20, pady=20, bd=8, font=('arial', 20, 'bold'), command=lambda x=button: self.button_click(x)).grid(row=row, column=col)

            col += 1
            if col > 3:
                col = 0
                row += 1

    def button_click(self, value):
        self.expression += str(value)
        self.text_input.set(self.expression)

    def equal_button(self):
        try:
            result = str(eval(self.expression))
            self.text_input.set(result)
            self.expression = result
        except Exception as e:
            self.text_input.set("Error")
            self.expression = ""

    def clear_button(self):
        self.expression = ""
        self.text_input.set("")

if __name__ == "__main__":
    root = tk.Tk()
    calculator = Calculator(root)
    root.mainloop()
